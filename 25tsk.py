"""6, 22, 28, 43, 63, 70, 101."""

'''6) Напишите программу, которая ищет среди целых чисел, принадлежащих
числовому отрезку [251811; 251826], числа, имеющие ровно 4 различных
делителя. Выведите эти четыре делителя для каждого найденного числа в порядке возрастания.'''

def good(n):
    bag = []
    for j in range(1, n // 2 + 1):
        if n % j == 0:
            bag.append(j)
            bag.append(n // j)
            if len(set(bag)) > 4:
                return []
    return bag


for i in range(251811, 251826 + 1):
    x = good(i)
    if x:
        print(*sorted(x))


"""22) (А.Н. Носкин) Напишите программу, которая ищет среди целых чисел, принадлежащих 
числовому отрезку [190201; 190280], числа, имеющие ровно 4 различных ЧЁТНЫХ делителя. 
Выведите эти четыре делителя для каждого найденного числа в порядке убывания."""

def good(n):
    bag = []
    for j in range(2, n + 1):
        if n % j == 0 and j % 2 == 0:
            bag.append(j)
            if len(set(bag)) > 4:
                return []
    if len(bag) < 4:
        return []
    return bag


for i in range(190201, 190280 + 1):
    y = good(i)
    if y:
        print(*sorted(y, reverse=True))

'''Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку
 [244143; 367821], числа, имеющие ровно 5 различных делителей. Выведите эти делители для каждого
  найденного числа в порядке возрастания.'''  # не поняла


def good(n):
    bag = []
    for j in range(1, round(n ** 0.5) + 1):
        if n // j:
            bag.append(j)
            bag.append(n // j)
    if len(set(bag)) == 5:
        return bag
    return []


for i in range(244143, 367821 + 1):
    y = good(i)
    if y:
        print(sorted(y))


'''43) Напишите программу, которая ищет среди целых чисел,
 принадлежащих числовому отрезку [1547341; 1547409], простые числа.
  Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по порядку.'''

def check_prime_number(n):
    for j in range(2, round(n ** 0.5) + 1):
        if n % j == 0:
            return False
    return True


k = 1
for i in range(1547341, 1547409 + 1):
    if check_prime_number(i):
        print(k, i)
        k += 1


'''(А.Н. Носкин) Напишите программу, которая ищет среди целых чисел, принадлежащих
 числовому отрезку [2532000; 2532160], простые числа. Найдите все простые числа, которые
  заканчиваются на цифру 7. Выведите их в порядке возрастания, слева от каждого числа выведите его номер по порядку.'''

def check_prime_number(n):
    f = True
    for j in range(2, round(n ** (1 / 2)) + 1):
        if n % j == 0:
            f = False
            break
    return f


k = 1
for i in range(2532000, 2532160 + 1):
    if k > 5:
        break
    if check_prime_number(i):
        print(k, i)
        k += 1


'''70) (Д.Ф. Муфаззалов, г. Уфа) Совершенным называется число, натуральное число, 
равное сумме всех своих собственных делителей (то есть всех положительных делителей, отличных 
от самого́ числа) (например, число 6=1+2+3). ) Выведите каждое совершенное число из диапазона [2; 10000] и
количество его собственных делителей в порядке возрастания. Вывод каждого совершенного числа начинайте с 
новой строки. Числа в строке разделяйте пробелом.'''

def good(n):
    divs = [1]
    for j in range(2, round(n ** 0.5) + 1):
        if n % j == 0:
            divs.append(j)
            divs.append(n // j)
    if sum(set(divs)) == n:
        return divs


for i in range(2, 10001):
    y = good(i)
    if y:
        print(i, len(y))


'''Среди целых чисел, принадлежащих числовому отрезку [125697;190234], найдите числа, 
которые представляют собой произведение двух различных простых делителей. Запишите в ответе количество 
таких чисел и максимальное их них.'''


def check_prime_numbers(n):
    f = True
    for k in range(2, round(n ** 0.5) + 1):
        if n % k == 0:
            f = False
            break
    return f


def find_diviers(n):
    for j in range(2, round(n ** 0.5)):
        if n % j == 0:
            if check_prime_numbers(j) and check_prime_numbers(n // j) and j != n // j:
                return True


bag = []
for i in range(125697, 190234 + 1):
    if find_diviers(i):
        bag.append(i)
print(len(bag), bag[-1])
